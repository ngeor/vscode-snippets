{
    // Place your snippets for pascal here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Class": {
        "prefix": "cls",
        "body": [
            "type",
            "  $1 = class",
            "  private",
            "  public",
            "    constructor Create;",
            "    destructor Destroy; override;",
            "  end;",
            "",
            "constructor $1.Create;",
            "begin",
            "end;",
            "",
            "destructor $1.Destroy;",
            "begin",
            "  inherited Destroy;",
            "end;"
        ],
        "description": "Define and implement a new class"
    },
    "Decorator class": {
        "prefix": "decorator",
        "body": [
            "type",
            "  $1 = class",
            "  private",
            "    F$2: T$2;",
            "  public",
            "    constructor Create($2: T$2);",
            "    destructor Destroy; override;",
            "  end;",
            "",
            "constructor $1.Create($2: T$2);",
            "begin",
            "  F$2 := $2;",
            "end;",
            "",
            "destructor $1.Destroy;",
            "begin",
            "  F$2.Free;",
            "  inherited Destroy;",
            "end;"
        ],
        "description": "Define and implement a new decorator class"
    }
}
